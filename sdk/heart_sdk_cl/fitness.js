export const Version="1.1.0";export const UUID={basic:{service:"AAE28F00-71B5-42A1-8C3C-F9CF6AC969D0",notify:"AAE28F01-71B5-42A1-8C3C-F9CF6AC969D0",write:"AAE28F02-71B5-42A1-8C3C-F9CF6AC969D0"},battery:{service:"0000180F-0000-1000-8000-00805F9B34FB",notify:"00002A19-0000-1000-8000-00805F9B34FB"},heart:{service:"0000180D-0000-1000-8000-00805F9B34FB",notify:"00002A37-0000-1000-8000-00805F9B34FB"},profile:{service:"0000180A-0000-1000-8000-00805F9B34FB",system:"00002A23-0000-1000-8000-00805F9B34FB",model:"00002A24-0000-1000-8000-00805F9B34FB",serial:"00002A25-0000-1000-8000-00805F9B34FB",firmware:"00002A26-0000-1000-8000-00805F9B34FB",hardware:"00002A27-0000-1000-8000-00805F9B34FB",software:"00002A28-0000-1000-8000-00805F9B34FB",vendor:"00002A28-0000-1000-8000-00805F9B34FB"}};export const ConnectStatus={disconnected:0,connecting:1,connected:2};export const BluetoothStatus={Status_Bluetooth_Enabled:{code:30001,message:"请打开系统蓝牙开关"},Status_Location_Enabled:{code:30002,message:"请打开系统定位开关"},Status_Location_Authorized:{code:30003,message:"请打开微信定位权限，允许微信使用您的位置信息"},Status_Authorized_Setting:{code:30004,message:"请打开小程序蓝牙开关，点击右上角三个点，然后点击设置"},Status_available:{code:30005,message:"蓝牙适配器不可用"}};export const SuccessCallbackEvent={Success_DiscoverDevice_CB_Discover:{code:210,message:"发现设备"},Success_DiscoverDevice_CB_ScanDone:{code:211,message:"扫描完成"},Success_ConnectStatus_CB_PowerOn:{code:220,message:"蓝牙打开"},Success_ConnectStatus_CB_Connecting:{code:221,message:"正在连接"},Success_ConnectStatus_CB_Connected:{code:222,message:"连接成功"},Success_ConnectStatus_CB_Stop:{code:223,message:"断开成功"}};export const ErrorCallbackEvent={Error_DiscoverDevice_CB_Timeout:{code:410,message:"扫描超时"},Error_ConnectStatus_CB_PowerOff:{code:420,message:"蓝牙关闭"},Error_ConnectStatus_CB_ConnectFail:{code:421,message:"连接失败"},Error_ConnectStatus_CB_Disconnected:{code:422,message:"连接断开"}};export const SuccessApiThen={Success_Scan:{code:2010,message:"\b扫描接口成功调用"},Success_StopScan:{code:2020,message:"\b停止扫描接口成功调用"},Success_Connect:{code:2030,message:"\b连接接口成功调用"},Success_Disconnect:{code:2040,message:"\b断开接口成功调用"},Success_Read:{code:2050,message:"\b读特征值接口成功调用"},Success_Write:{code:2060,message:"\b写入数据接口成功调用"},Success_Notify:{code:2070,message:"\b监听特征值接口成功调用"}};export const ErrorApiCatch={Error_Low_Version:{code:4e3,message:"当前基础库版本低，请更新微信版本"},Error_Scan_Failed:{code:4010,message:"扫描错误：扫描失败"},Error_Scan_PowerOff:{code:4011,message:"扫描错误：蓝牙被关闭"},Error_Scan_NoService:{code:4012,message:"扫描错误：没有找到指定服务"},Error_StopScan_Failed:{code:4020,message:"停止扫描错误：停止扫描失败"},Error_StopScan_PowerOff:{code:4021,message:"停止扫描错误：蓝牙被关闭"},Error_Connect_Failed:{code:4030,message:"连接错误：连接失败"},Error_Connect_PowerOff:{code:4031,message:"连接错误：蓝牙被关闭"},Error_Connect_AlreadyConnected:{code:4032,message:"连接错误：已经连接或正在连接"},Error_Connect_Timeout:{code:4033,message:"连接错误：连接超时"},Error_Connect_EmptyId:{code:4034,message:"连接错误：设备id不能为空"},Error_Disconnect_Failed:{code:4040,message:"断开错误：断开失败"},Error_Read_Failed:{code:4050,message:"\b读特征值错误：读特征值失败"},Error_Read_NotConnected:{code:4051,message:"读特征值错误：蓝牙未连接"},Error_Read_NotSupport:{code:4052,message:"读特征值错误：当前特征不支持读操作"},Error_Read_NoService:{code:4053,message:"读特征值错误：没有找到指定服务"},Error_Read_NoCharacteristic:{code:4054,message:"读特征值错误：没有找到指定特征值"},Error_Write_Failed:{code:4060,message:"\b写入数据错误：写入数据失败"},Error_Write_NotConnected:{code:4061,message:"写入数据错误：蓝牙未连接"},Error_Write_NotSupport:{code:4062,message:"写入数据错误：当前特征不支持写操作"},Error_Write_NoService:{code:4063,message:"写入数据错误：没有找到指定服务"},Error_Write_NoCharacteristic:{code:4064,message:"写入数据错误：没有找到指定特征值"},Error_Notify_Failed:{code:4070,message:"\b监听特征值错误：监听特征值错误失败"},Error_Notify_NotConnected:{code:4071,message:"监听特征值错误：蓝牙未连接"},Error_Notify_NotSupport:{code:4072,message:"监听特征值错误：当前特征不支持监听操作"},Error_Notify_NoService:{code:4073,message:"监听特征值错误：没有找到指定服务"},Error_Notify_NoCharacteristic:{code:4074,message:"监听特征值错误：没有找到指定特征值"}};const ERROR_TYPE={NOT_INIT:{code:1e4,message:"未初始化蓝牙适配器"},NOT_AVAILABLE:{code:10001,message:"当前蓝牙适配器不可用"},NO_DEVICE:{code:10002,message:"没有找到指定设备"},CONNECTION_FAIL:{code:10003,message:"连接失败"},NO_SERVICE:{code:10004,message:"没有找到指定服务"},NO_CHARACTERISTIC:{code:10005,message:"没有找到指定特征值"},NO_CONNECTION:{code:10006,message:"当前连接已断开"},PROPERTY_NOT_SUPPORT:{code:10007,message:"当前特征值不支持此操作"},SYSTEM_ERROR:{code:10008,message:"系统异常"},SYSTEM_NOT_SUPPORT:{code:10009,message:"Android 系统版本低于 4.3 不支持 BLE"},OPERATE_TIMEOUT:{code:10012,message:"操作超时"},INVALID_PARAMETER:{code:10013,message:"无效参数"},ALREADY_CONNECTED:{code:-1,message:"蓝牙已连接，不能再连接"},UN_KNOWN:{code:1e5,message:"未知错误"}};export function getErrorType(e){for(let t of Object.keys(ERROR_TYPE))if(e===ERROR_TYPE[t].code)return ERROR_TYPE[t];return ERROR_TYPE.UN_KNOWN};export function isEmpty(e=""){return!e||""==e||""==e.replace(/(^\s*)|(\s*$)/g,"")};export function ab2str(e){return Array.prototype.map.call(new Uint8Array(e),e=>("00"+e.toString(16)).slice(-2)).join("")};export function str2ab(e){for(var t=new ArrayBuffer(e.length/2),r=new Uint8Array(t),s=0;s<e.length;s+=2)r[parseInt(s/2)]=char2Hex(e.charCodeAt(s))<<4|char2Hex(e.charCodeAt(s+1));return t};export function bytes2ab(e){var t=new ArrayBuffer(e.length),r=new DataView(t);return e.forEach((e,t)=>{r.setUint8(t,e)}),t};export function char2Hex(e){return e>=48&&e<=57?e-=48:e>=65&&e<=70?e-=55:e>=97&&e<=102?e-=87:e=255,e};export function equalsIgnoreCase(e,t){return!(!e||!t)&&e.toUpperCase()===t.toUpperCase()};export function hexCharCodeToStr(e){var t=e.trim(),r="0x"===t.substr(0,2).toLowerCase()?t.substr(2):t,s=r.length;if(s%2!=0)return console.log("Illegal Format ASCII Code!"),"";for(var i,a=[],c=0;c<s;c+=2)i=parseInt(r.substr(c,2),16),a.push(String.fromCharCode(i));return a.join("")};export function numberParse(e,t,r){r+=t;for(var s=0,i=t;i<r;i++)s<<=8,s|=255&e[i];return s};export function zoneUTC(){var e=(new Date).getTimezoneOffset(),t=(new Date).getTime(),r=new Date(t+60*Math.abs(e)*1e3);return parseInt(r.getTime()/1e3)};export function restoreUTC(e){var t=(new Date).getTimezoneOffset(),r=(new Date).setTime(1e3*e);return new Date(r-60*Math.abs(t)*1e3).getTime()};export function checkSum(e){for(var t=0,r=0;r<e.length;r++)t+=255&e[r];return t=0-t,t^=58};export function format(e){return e.hasOwnProperty("errMsg")&&(e.message=e.errMsg,delete e.errMsg),e.hasOwnProperty("errCode")&&(e.code=e.errCode,delete e.errCode),e.hasOwnProperty("message")||(e.message="Undefined"),e.hasOwnProperty("code")||(e.code=-1),e};export function Log(){this.log=function(e,t=""){this.debug&&console.log(`Fitness:（${e}）:`,t)},this.info=function(e,t){this.debug&&console.info(`Fitness:（${e}）:`,t)},this.warn=function(e,t){this.debug&&console.warn(`Fitness:（${e}）:`,t)},this.error=function(e,t){this.debug&&console.error(`Fitness:（${e}）:`,t)}};export default class Bluetooth{constructor(e){this.bm=e,this.isInitializedAdapter=!1,this.isAvailableAdapter=!1,this.scanDevices=[],this.isStamp=!1,this.currentStamp=0,this.packages=[],this.heartrateList=[],this.heartrateData=[],this.sportList=[],this.mCacheStamp=0,this.mRecordTag=0,this.isRecord=!1,this.isReceived=!1,this.mCachePackages=[],this.isProgress=!1,this.isProgressStamp=!1,this.mProgressStamp=0,this.mProgress=0,this.mTotal=0}openBluetoothAdapter(){return new Promise(function(e,t){wx.openBluetoothAdapter({success(t){e(t)},fail(e){t(e)}})})}closeBluetoothAdapter(){return new Promise(function(e,t){wx.closeBluetoothAdapter({success(t){e(t)},fail(e){t(e)}})})}startBluetoothDevicesDiscovery(e,t,r){return new Promise(function(t,s){wx.startBluetoothDevicesDiscovery({allowDuplicatesKey:!0,services:e,interval:r,success(e){t(e)},fail(e){s(e)}})})}stopBluetoothDevicesDiscovery(){return new Promise(function(e,t){wx.offBluetoothDeviceFound(),wx.stopBluetoothDevicesDiscovery({success(t){e(t)},fail(e){t(e)}})})}createBLEConnection(e){return new Promise(function(t,r){wx.createBLEConnection({deviceId:e,success(e){t(e)},fail(e){r(e)}})})}getBLEDeviceServices(e){return new Promise(function(t,r){wx.getBLEDeviceServices({deviceId:e,success(e){t(e)},fail(e){r(e)}})})}getBLEDeviceCharacteristics(e,t){return new Promise(function(r,s){wx.getBLEDeviceCharacteristics({deviceId:e,serviceId:t,success(e){r(e)},fail(e){s(e)}})})}setBLEMTU(e,t){return new Promise(function(r,s){wx.setBLEMTU({deviceId:e,mtu:t,success(e){r(e)},fail(e){s(e)}})})}notifyBLECharacteristicValueChange(e,t,r,s){return new Promise(function(i,a){wx.notifyBLECharacteristicValueChange({state:s,deviceId:e,serviceId:t,characteristicId:r,success(e){i(e)},fail(e){a(e)}})})}readBLECharacteristicValue(e,t,r){return new Promise(function(s,i){wx.readBLECharacteristicValue({deviceId:e,serviceId:t,characteristicId:r,success(e){s(e)},fail(e){i(e)}})})}writeBLECharacteristicValue(e,t,r,s){return new Promise(function(i,a){wx.writeBLECharacteristicValue({deviceId:e,serviceId:t,characteristicId:r,value:s,success(e){i(e)},fail(e){a(e)}})})}closeBLEConnection(e){return new Promise(function(t,r){e?wx.closeBLEConnection({deviceId:e,success(e){t(e)},fail(e){r(e)}}):t({code:10002,message:"没有找到指定设备"})})}getSetting(){return new Promise(function(e,t){wx.getSetting({success(r){r.authSetting&&r.authSetting["scope.bluetooth"]?e(r):t({code:30001,message:"蓝牙未授权"})},fail(e){t({code:e.errCode?e.errCode:3e4,message:e.errMsg?e.errMsg:"获取用户设置失败"})}})})}authorize(){return new Promise(function(e,t){wx.authorize({scope:"scope.bluetooth",success(t){e(t)},fail(e){t({code:30004,message:e.errMsg?e.errMsg:"请打开小程序蓝牙开关，点击右上角三个点，然后点击设置"})}})})}checkPermission(){let e=this;return new Promise(function(t,r){let s=!1;const i=wx.getDeviceInfo();e.bm.log("getDeviceInfo",i);const a=wx.getSystemSetting();e.bm.log("getSystemSetting",a);const c=wx.getAppAuthorizeSetting();e.bm.log("getAppAuthorizeSetting",c),"android"===i.platform.toLowerCase()&&(s=!0),a.bluetoothEnabled?!s||a.locationEnabled?!s||c.locationAuthorized?t():r({code:30003,message:"请打开微信定位权限，允许微信使用您的位置信息"}):r({code:30002,message:"请打开系统定位开关"}):r({code:30001,message:"请打开系统蓝牙开关"})}).then(e=>this.authorize()).then(e=>this.getSetting()).catch(t=>(e.bm.log("checkPermission",t),Promise.reject(t)))}checkBluetoothAdapter(e){let t=this;return new Promise(function(r,s){wx.offBluetoothAdapterStateChange(),wx.onBluetoothAdapterStateChange(i=>{t.bm.log("onBluetoothAdapterStateChange",i),i.available?(t.isAvailableAdapter=!0,e&&t.callBackConnectStatus(SuccessCallbackEvent.Success_ConnectStatus_CB_PowerOn),r(i)):(t.isAvailableAdapter=!1,t.bm.connectStatus=ConnectStatus.disconnected,t.callBackConnectStatus(ErrorCallbackEvent.Error_ConnectStatus_CB_PowerOff),s(i))})})}initBluetoothAdapter(e=!1){return this.checkPermission().then(e=>{this.bm.log("checkPermission success",e),this.checkBluetoothAdapter()}).then(e=>(this.bm.log("checkBluetoothAdapter success",e),this.openBluetoothAdapter())).then(e=>(this.bm.log("openBluetoothAdapter success",e),this.isInitializedAdapter=!0,this.isAvailableAdapter=!0,Promise.resolve(e))).catch(e=>(this.bm.log("openBluetoothAdapter fail",e),this.isInitializedAdapter=!1,this.isAvailableAdapter=!1,this.bm.connectStatus=ConnectStatus.disconnected,Promise.reject(e)))}scanDevice(e){let{services:t,allowDuplicatesKey:r,interval:s,timeout:i,deviceName:a,containName:c}=e;return this.initBluetoothAdapter(!0).then(e=>(this.scanDevices=[],this.destoryTimer(),this.scanTimeoutTimer=-1!==i?setTimeout(e=>{this.stopScan(),0===this.scanDevices.length?(this.bm.log("startBluetoothDevicesDiscovery fail ","timeout"),this.callBackDiscoverDevice(null,ErrorCallbackEvent.Error_DiscoverDevice_CB_Timeout,!0)):this.callBackDiscoverDevice(null,SuccessCallbackEvent.Success_DiscoverDevice_CB_ScanDone,!1)},i||15e3):null,this.startBluetoothDevicesDiscovery(t,r,s))).then(e=>(this.bm.log("startBluetoothDevicesDiscovery success",e),wx.offBluetoothDeviceFound(),wx.onBluetoothDeviceFound(e=>{let t=e.devices||e;for(let e of t){if(Array.isArray(e)&&(e=t[0][0]),this.bm.log("onBluetoothDeviceFound",e),127===e.RSSI)return;let r=e.name||e.deviceName;if(e.name=r,a&&(!r||r!==a))return;if(c&&(!r||!~r.indexOf(c)))return;"string"!=typeof e.advertisData&&(e.advertisData=ab2str(e.advertisData)),this.callBackDiscoverDevice(e,SuccessCallbackEvent.Success_DiscoverDevice_CB_Discover,!1);for(let t of this.scanDevices)if(t.deviceId===e.deviceId)return void Object.assign(t,e);this.scanDevices.push(e)}}),Promise.resolve(SuccessApiThen.Success_Scan))).catch(e=>(this.bm.log("startBluetoothDevicesDiscovery fail",e),12===e.code||10001===e.code?Promise.reject(ErrorApiCatch.Error_Scan_PowerOff):10012===e.code||10004===e.code?Promise.reject(ErrorApiCatch.Error_Scan_NoService):Promise.reject(ErrorApiCatch.Error_Scan_Failed)))}stopScan(){return this.destoryTimer(),this.stopBluetoothDevicesDiscovery().then(e=>(this.bm.log("stopBluetoothDevicesDiscovery success",e),Promise.resolve(SuccessApiThen.Success_StopScan))).catch(e=>(this.bm.log("stopBluetoothDevicesDiscovery fail",e),12===e.code||10001===e.code?Promise.reject(ErrorApiCatch.Error_StopScan_PowerOff):Promise.reject(ErrorApiCatch.Error_StopScan_Failed)))}connect(e,t=!1){if(isEmpty(e.deviceId))return Promise.reject(ErrorApiCatch.Error_Connect_EmptyId);this.bm.deviceInfo=e,this.bm.connectStatus=ConnectStatus.connecting,this.callBackConnectStatus(SuccessCallbackEvent.Success_ConnectStatus_CB_Connecting);let r=e.deviceId;return this.initBluetoothAdapter().then(s=>(this.bm.log("initBluetoothAdapter success",s),wx.offBLEConnectionStateChange(),wx.onBLEConnectionStateChange(s=>{if(this.bm.log("onBLEConnectionStateChange",s),!s.connected)return this.scanAndReconnect().then(e=>{this.bm.connectStatus=ConnectStatus.disconnected,this.callBackConnectStatus(ErrorCallbackEvent.Error_ConnectStatus_CB_Disconnected)}),Promise.resolve(ErrorCallbackEvent.Error_ConnectStatus_CB_ConnectFail);this.bm.isAutoconnect=t,this.bm.deviceName=e.name,this.getBLEDeviceServices(r).then(t=>{this.bm.log("getBLEDeviceServices success",t);let s=[];return e.services=t.services.map(e=>{let t=e.uuid||e.serviceId,i=this.getBLEDeviceCharacteristics(r,t);return s.push(i),{serviceId:t}}),Promise.all(s)}).then(t=>(this.bm.log("getBLEDeviceCharacteristics success",t),e.services=t.map((t,r)=>{let s=e.services[r];return s.characteristics=t.characteristics,s}),this.bm.deviceInfo=e,this.bm.connectStatus=ConnectStatus.connected,this.callBackConnectStatus(SuccessCallbackEvent.Success_ConnectStatus_CB_Connected),setTimeout(()=>{this.bm.syncTime(),this.bm.readBatteryCharacteristic(),this.bm.readSoftwareCharacteristic(),this.bm.notifyBatteryCharacteristic(),this.bm.notifyHeartrateCharacteristic(),this.bm.notifyBasicCharacteristic()},200),Promise.resolve(SuccessCallbackEvent.Success_ConnectStatus_CB_Connected)))}),this.createBLEConnection(r).then(e=>Promise.resolve(SuccessApiThen.Success_Connect)).catch(e=>Promise.reject(e)))).catch(e=>(this.bm.warn("api connect error",e),this.closeBLEConnection(r).then(e=>e).catch(e=>e),1e5===e.code&&(e=ErrorCallbackEvent.Error_ConnectStatus_CB_ConnectFail),this.bm.connectStatus=ConnectStatus.disconnected,this.callBackConnectStatus(format(e)),12===e.code||10001===e.code?Promise.reject(ErrorApiCatch.Error_Connect_PowerOff):e.message&&~e.message.indexOf("超时")||e.errMsg&&~e.errMsg.indexOf("time out")?Promise.reject(ErrorApiCatch.Error_Connect_Timeout):Promise.reject(ErrorApiCatch.Error_Connect_Failed)))}scanAndReconnect(){let e=this;return new Promise(function(t,r){e.bm.isAutoconnect&&!isEmpty(e.bm.deviceName)?(e.closeBLEConnection(e.bm.deviceInfo.deviceId).then(e=>e).catch(e=>e),wx.startBluetoothDevicesDiscovery({allowDuplicatesKey:!0,interval:0,success:function(t){e.bm.log("reconnect startBluetoothDevicesDiscovery...",t),wx.offBluetoothDeviceFound(),wx.onBluetoothDeviceFound(function(t){let r=t.devices||t;for(let t of r){if(Array.isArray(t)&&(t=r[0][0]),e.bm.log("reconnect onBluetoothDeviceFound",t),127===t.RSSI)return;(t.name||t.deviceName)===e.bm.deviceName&&(e.bm.log("reconnect createBLEConnection:",t),wx.stopBluetoothDevicesDiscovery(),wx.createBLEConnection({deviceId:t.deviceId,success:function(t){e.bm.log("reconnect success")},fail:function(t){e.bm.log("reconnect failure:",t)}}))}})},fail:function(t){e.bm.log("reconnect scan error:",t)}}),t({code:5e4,message:"自动连接已开启"})):t({code:50001,message:"自动连接已关闭"})})}autoconnect(e){let t=this;return new Promise(function(r,s){if(t.bm.isAutoconnect=e,e)return t.scanAndReconnect();r({code:50001,message:"自动连接已关闭"})})}disconnect(e){return this.bm.deviceName="",this.bm.isAutoconnect=!1,this.bm.connectStatus===ConnectStatus.connected?this.closeBLEConnection(this.bm.deviceInfo.deviceId).then(t=>(this.bm.log("closeBLEConnection success",t),e&&this.closeBluetoothAdapter().then(e=>{this.bm.log("closeBluetoothAdapter success",e)}).catch(e=>e),Promise.resolve(SuccessApiThen.Success_Disconnect))).catch(e=>(this.bm.log("closeBLEConnection fail",e),Promise.reject(ErrorApiCatch.Error_Disconnect_Failed))):(e&&this.closeBluetoothAdapter().then(e=>{this.bm.log("closeBluetoothAdapter success",e)}).catch(e=>e),Promise.resolve(SuccessApiThen.Success_Disconnect))}read(e){if(this.bm.connectStatus===ConnectStatus.connected){let{suuid:t,cuuid:r}=e;return this.readBLECharacteristicValue(this.bm.deviceInfo.deviceId,t,r).then(e=>(this.bm.log("readBLECharacteristicValue success",e),Promise.resolve(SuccessApiThen.Success_Read))).catch(e=>(this.bm.log("readBLECharacteristicValue fail",e),10007===e.code?Promise.reject(ErrorApiCatch.Error_Read_NotSupport):10004===e.code?Promise.reject(ErrorApiCatch.Error_Read_NoService):10005===e.code?Promise.reject(ErrorApiCatch.Error_Read_NoCharacteristic):Promise.reject(ErrorApiCatch.Error_Read_Failed)))}return Promise.reject(ErrorApiCatch.Error_Read_NotConnected)}write(e){let{suuid:t,cuuid:r,value:s}=e;return this.bm.connectStatus===ConnectStatus.connected?(s="string"==typeof s?str2ab(s):bytes2ab(s),this.bm.log("writeCmdToDevice",ab2str(s)),this.writeBLECharacteristicValue(this.bm.deviceInfo.deviceId,t,r,s).then(e=>(this.bm.log("writeBLECharacteristicValue success",e),Promise.resolve(SuccessApiThen.Success_Write))).catch(e=>(this.bm.log("writeBLECharacteristicValue fail",e),10007===e.code?Promise.reject(ErrorApiCatch.Error_Write_NotSupport):10004===e.code?Promise.reject(ErrorApiCatch.Error_Write_NoService):10005===e.code?Promise.reject(ErrorApiCatch.Error_Write_NoCharacteristic):Promise.reject(ErrorApiCatch.Error_Write_Failed)))):Promise.reject(ErrorApiCatch.Error_Write_NotConnected)}notify(e){if(this.bm.connectStatus===ConnectStatus.connected){let{suuid:t,cuuid:r,state:s}=e;return this.notifyBLECharacteristicValueChange(this.bm.deviceInfo.deviceId,t,r,s).then(e=>(this.bm.log("notifyBLECharacteristicValueChange success",e),Promise.resolve(SuccessApiThen.Success_Notify))).catch(e=>(this.bm.log("notifyBLECharacteristicValueChange fail",e),10007===e.code?Promise.reject(ErrorApiCatch.Error_Notify_NotSupport):10004===e.code?Promise.reject(ErrorApiCatch.Error_Notify_NoService):10005===e.code?Promise.reject(ErrorApiCatch.Error_Notify_NoCharacteristic):Promise.reject(ErrorApiCatch.Error_Notify_Failed)))}return Promise.reject(ErrorApiCatch.Error_Notify_NotConnected)}registerDidUpdateConnectStatus(e){this._didUpdateStatusCB=e}registerDidDiscoverDevice(e){this._didDiscoverDeviceCB=e}registerBatteryForCharacteristic(e){this._didBatteryUpdateCB=e}registerSoftwareForCharacteristic(e){this._didSoftwareUpdateCB=e}registerHeartrateForCharacteristic(e){this._didHeartrateUpdateCB=e}registerSportForCharacteristic(e){this._didSportUpdateCB=e}registerHeartrateListForCharacteristic(e){this._didHeartrateListUpdateCB=e}registerHeartrateDataForCharacteristic(e){this._didHeartrateDataUpdateCB=e}registerHeartrateProgressForCharacteristic(e){this._didHeartrateProgressUpdateCB=e}registerUserInfoForCharacteristic(e){this._didUserInfoUpdateCB=e}registerSportHistoryForCharacteristic(e){this._didSportHistoryUpdateCB=e}registerBloodOxygenForCharacteristic(e){this._didBloodOxygenUpdateCB=e}registerRealTimeTemperatureForCharacteristic(e){this._didRealTimeTemperatureUpdateCB=e}registerHeartrateEnabledForCharacteristic(e){this._didHeartRateEnabledUpdateCB=e}registerHeartrateSettingForCharacteristic(e){this._didHeartRateSettingUpdateCB=e}registerDidUpdateValueForCharacteristic(e){this._didUpdateValueCB=e,wx.offBLECharacteristicValueChange(),wx.onBLECharacteristicValueChange(e=>{let t=ab2str(e.value),r=new Uint8Array(e.value);this._didUpdateValueCB(t);try{if(equalsIgnoreCase(e.serviceId,UUID.battery.service)&&equalsIgnoreCase(e.characteristicId,UUID.battery.notify))this._didBatteryUpdateCB&&this._didBatteryUpdateCB(numberParse(r,0,1));else if(equalsIgnoreCase(e.serviceId,UUID.profile.service)&&equalsIgnoreCase(e.characteristicId,UUID.profile.software))this._didSoftwareUpdateCB&&this._didSoftwareUpdateCB(hexCharCodeToStr(t));else if(equalsIgnoreCase(e.serviceId,UUID.heart.service)&&equalsIgnoreCase(e.characteristicId,UUID.heart.notify)){if(r.length<2)return void(this._didHeartrateUpdateCB&&this._didHeartrateUpdateCB({heartRate:numberParse(r,1,1),intervals:[]}));let e=0,t=numberParse(r,0,1),s=0==(1&t)?17:18,i=0!=(8&t),a=0!=(16&t);if(e+=1,r.length<1+(15&s)+(i?2:0)+(a?2:0))return;let c;c=17==s?numberParse(r,e,1):numberParse(r,e,2),e+=15&s,i&&(energyExpanded=numberParse(r,e,2),e+=2);let o,n=new Array;if(a){let t=(r.length-e)/2;for(let s=0;s<t;++s)o=r[e],r[e]=r[e+1],r[e+1]=o,n.push(numberParse(r,e,2)),e+=2;this.bm.log("RRIntervals:","intervals:"+n+"  heartRate:"+c)}this._didHeartrateUpdateCB&&this._didHeartrateUpdateCB({heartRate:c,intervals:n})}else if(equalsIgnoreCase(e.serviceId,UUID.basic.service)&&equalsIgnoreCase(e.characteristicId,UUID.basic.notify)){let e=numberParse(r,2,1);if(this.bm.log("UpdateValueForCharacteristic cmd:",e),3==e){let e=numberParse(r,5,1),t=numberParse(r,6,1),s=numberParse(r,7,1),i=numberParse(r,8,1),a=4294967296*numberParse(r,9,1)+16777216*numberParse(r,10,1)+65536*numberParse(r,11,1)+256*numberParse(r,12,1)+numberParse(r,13,1);this._didUserInfoUpdateCB&&this._didUserInfoUpdateCB({age:e,sex:t,weight:s,height:i,userId:a})}else if(21==e){let e=numberParse(r,3,3),t=numberParse(r,6,3),s=numberParse(r,9,3);this._didSportUpdateCB&&this._didSportUpdateCB({step:e,distance:t,calorie:s})}else if(22==e){let e=r.slice(3,r.length-1);this.bm.log("UpdateValueForCharacteristic values slice:",e);for(let t=0;t<e.length/10;t++){let r=10*t,s=numberParse(e,r,4),i=numberParse(e,r+4,3),a=numberParse(e,r+7,3),c=restoreUTC(s);this.sportList.push({stamp:c,step:i,calorie:a}),this.bm.log("UpdateValueForCharacteristic","i:"+t+" stamp:"+c+" step:"+i+" calorie:"+a)}this._didSportHistoryUpdateCB&&this._didSportHistoryUpdateCB(this.sportList),this.clearSportData()}else if(33==e){let e=numberParse(r,3,4);if(this.bm.log("UpdateValueForCharacteristic utcTag:",e),-1!=e)this.packages.push(r);else{for(let e=0;e<this.packages.length;e++){let t=this.packages[e];this.bm.log("UpdateValueForCharacteristic values:",t),t=t.slice(3,t.length-1),this.bm.log("UpdateValueForCharacteristic values slice:",t);for(let e=0;e<t.length/4;e++){let r=numberParse(t,4*e,4),s=restoreUTC(r);this.heartrateList.push({stamp:r,record:s}),this.bm.log("UpdateValueForCharacteristic i:","i:"+e+" stamp:"+r+" record:"+s)}}this._didHeartrateListUpdateCB&&this._didHeartrateListUpdateCB(this.heartrateList),this.clearHeartrateList()}}else if(34==e||35==e){if(!this.isRecord){if(34==e){let e=numberParse(r,3,4);if(this.isProgress&&!this.isProgressStamp&&(this.isProgressStamp=e==this.mProgressStamp),this.isProgressStamp){this.mProgress+=r.length-8;let e=restoreUTC(this.mProgressStamp);this._didHeartrateProgressUpdateCB&&this._didHeartrateProgressUpdateCB({stamp:e,progress:this.mProgress,total:this.mTotal})}e==this.mRecordTag?(this.mCacheStamp=e,this.isReceived=!0,this.mCachePackages.push(r)):this.isReceived&&(e<102400?(this.mCachePackages.push(r),this.bm.log("0x22/0x23 record < 102400 record == mRecordTag:"+this.isRecord+"record:"+e+"mRecordTag:"+this.mRecordTag)):(this.isRecord=!0,this.parseRecordHistory(),this.bm.log("0x22/0x23 else record == mRecordTag:"+this.isRecord+"record:"+e+"mRecordTag:"+this.mRecordTag)))}35==e&&(this.isRecord=!0,this.parseRecordHistory())}}else if(55==e){let e=numberParse(r,3,1),t=0,s=0,i=0,a=0;r.length>8&&(t=numberParse(r,4,1),s=numberParse(r,5,1),i=numberParse(r,6,1),a=numberParse(r,7,1)),this.bm.log("0x37","bloodOxygenModel:"+e+" bloodOxygenValue: "+t+" wristPosture:"+s+" piValue:"+i+" onWrist:"+a),this._didBloodOxygenUpdateCB&&this._didBloodOxygenUpdateCB({bloodOxygenModel:e,bloodOxygenValue:t,wristPosture:s,piValue:i,onWrist:a})}else if(56==e){let e=numberParse(r,3,2)/10,t=numberParse(r,5,2)/10,s=numberParse(r,7,2)/10;this.bm.log("0x38 ","ambientTemperature: "+e+" wristTemperature: "+t+" bodyTemperature "+s),this._didRealTimeTemperatureUpdateCB&&this._didRealTimeTemperatureUpdateCB({ambientTemperature:e,wristTemperature:t,bodyTemperature:s})}else if(87==e)this.bm.log("0x57",r);else if(89==e);else if(91==e){let e=0===numberParse(r,7,1);this.bm.log("0x5B ","enabled: "+e),this._didHeartRateEnabledUpdateCB&&this._didHeartRateEnabledUpdateCB({enabled:e})}else if(70==e){let e=1===numberParse(r,3,1),t=numberParse(r,4,1),s=numberParse(r,5,1),i=numberParse(r,6,1);this.bm.log("0x46 ","query: "+e+" min: "+t+" max:"+s+" target:"+i),this._didHeartRateSettingUpdateCB&&this._didHeartRateSettingUpdateCB({query:e,min:t,max:s,target:i})}else 114==e&&(this.isProgress=!0,this.mProgressStamp=numberParse(r,3,4),this.mTotal=numberParse(r,7,4),this.bm.log("0x72",r))}}catch(e){this.bm.log("UpdateValueForCharacteristic error:",e)}})}setRecordTag(e){this.isRecord=!1,this.isReceived=!1,this.mRecordTag=e}parseRecordHistory(){for(let e=0;e<this.mCachePackages.length;e++){let t=this.mCachePackages[e];t=t.slice(3,t.length-1);for(let e=4;e<t.length;e++){let r=numberParse(t,e,1),s=restoreUTC(this.mCacheStamp);this.heartrateData.push({stamp:s,heart:r}),this.mCacheStamp++,this.bm.log("UpdateValueForCharacteristic i:","i:"+e+" stamp:"+s+" heart:"+r)}}this._didHeartrateDataUpdateCB&&this._didHeartrateDataUpdateCB(this.heartrateData),this.clearHeartrateData()}clearHeartrateList(){this.isStamp=!1,this.currentStamp=0,this.packages=[],this.heartrateList=[]}clearHeartrateData(){this.mCachePackages=[],this.heartrateData=[],this.isProgress=!1,this.isProgressStamp=!1,this.mProgressStamp=0,this.mProgress=0,this.mTotal=0}clearSportData(){this.isStamp=!1,this.currentStamp=0,this.packages=[],this.sportList=[]}callBackConnectStatus(e){this._didUpdateStatusCB&&this._didUpdateStatusCB({...e,device:this.bm.deviceInfo,connectStatus:this.bm.connectStatus})}callBackDiscoverDevice(e,t,r){this._didDiscoverDeviceCB&&this._didDiscoverDeviceCB(e?{...t,timeout:r,device:e}:{...t,timeout:r})}destoryTimer(){this.scanTimeoutTimer&&clearTimeout(this.scanTimeoutTimer),this.scanTimeoutTimer=null}};export class FitnessManager{constructor(e={}){return FitnessManager.instance||(FitnessManager.instance=this,Log.call(FitnessManager.prototype),this.deviceInfo={},this.isAutoconnect=!1,this.deviceName="",this.connectStatus=ConnectStatus.disconnected,this._bt=new Bluetooth(this)),Object.assign(FitnessManager.instance,e),FitnessManager.instance}scan(e={services:[],allowDuplicatesKey:!1,interval:0,timeout:15e3,deviceName:"",containName:""}){return this._bt.scanDevice(e)}stopScan(){return this._bt.stopScan()}connect(e,t){if(!e)throw new Error("device is undefiend");return this._bt.connect(e,t).then(e=>Promise.resolve(e))}autoconnect(e){return this._bt.autoconnect(e)}disconnect(e=!1){return this._bt.disconnect(e)}read(e={suuid:"",cuuid:""}){return this._bt.read(e)}write(e={suuid:"",cuuid:"",value:""}){return this._bt.write(e)}notify(e={suuid:"",cuuid:"",state:!0}){return this._bt.notify(e)}registerDidUpdateConnectStatus(e){if("function"!=typeof e)throw new TypeError("connectStatus callback expect function");this._bt.registerDidUpdateConnectStatus(e)}registerDidDiscoverDevice(e){if("function"!=typeof e)throw new TypeError("discoverDevice callback expect function");this._bt.registerDidDiscoverDevice(e)}registerDidUpdateValueForCharacteristic(e){if("function"!=typeof e)throw new TypeError("updateValueForCharacteristic callback expect function");this._bt.registerDidUpdateValueForCharacteristic(e)}readBatteryCharacteristic(){return this.read({suuid:UUID.battery.service,cuuid:UUID.battery.notify})}readSoftwareCharacteristic(){return this.read({suuid:UUID.profile.service,cuuid:UUID.profile.software})}registerSoftwareForCharacteristic(e){if("function"!=typeof e)throw new TypeError("softwareForCharacteristic callback expect function");this._bt.registerSoftwareForCharacteristic(e)}notifyBatteryCharacteristic(){return this.notify({suuid:UUID.battery.service,cuuid:UUID.battery.notify,state:!0})}notifyHeartrateCharacteristic(){return this.notify({suuid:UUID.heart.service,cuuid:UUID.heart.notify,state:!0})}notifyBasicCharacteristic(){return this.notify({suuid:UUID.basic.service,cuuid:UUID.basic.notify,state:!0})}registerBatteryForCharacteristic(e){if("function"!=typeof e)throw new TypeError("batteryForCharacteristic callback expect function");this._bt.registerBatteryForCharacteristic(e)}registerHeartrateForCharacteristic(e){if("function"!=typeof e)throw new TypeError("heartrateForCharacteristic callback expect function");this._bt.registerHeartrateForCharacteristic(e)}registerSportForCharacteristic(e){if("function"!=typeof e)throw new TypeError("sportForCharacteristic callback expect function");this._bt.registerSportForCharacteristic(e)}registerHeartrateListForCharacteristic(e){if("function"!=typeof e)throw new TypeError("heartrateListForCharacteristic callback expect function");this._bt.registerHeartrateListForCharacteristic(e)}registerHeartrateDataForCharacteristic(e){if("function"!=typeof e)throw new TypeError("heartrateDataForCharacteristic callback expect function");this._bt.registerHeartrateDataForCharacteristic(e)}registerHeartrateProgressForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerHeartrateProgressForCharacteristic callback expect function");this._bt.registerHeartrateProgressForCharacteristic(e)}registerUserInfoForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerUserInfoDataForCharacteristic callback expect function");this._bt.registerUserInfoForCharacteristic(e)}registerSportHistoryForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerSportHistoryForCharacteristic callback expect function");this._bt.registerSportHistoryForCharacteristic(e)}registerBloodOxygenForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerBloodOxygenForCharacteristic callback expect function");this._bt.registerBloodOxygenForCharacteristic(e)}registerRealTimeTemperatureForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerRealTimeTemperatureForCharacteristic callback expect function");this._bt.registerRealTimeTemperatureForCharacteristic(e)}registerHeartrateEnabledForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerHeartrateEnabledForCharacteristic callback expect function");this._bt.registerHeartrateEnabledForCharacteristic(e)}registerHeartrateSettingForCharacteristic(e){if("function"!=typeof e)throw new TypeError("registerHeartrateSettingForCharacteristic callback expect function");this._bt.registerHeartrateSettingForCharacteristic(e)}syncTime(){const e=zoneUTC();this.sendCommand(8,e>>>24,e>>>16,e>>>8,e)}sendCommand(e,...t){const r=[255,t.length+4,e];r.push(...t);const s=checkSum(r);return r.push(s),this.write({suuid:UUID.basic.service,cuuid:UUID.basic.write,value:r})}getHeartrateList(){this._bt.clearHeartrateList(),this.sendCommand(33,0)}getHeartrateData(e){e=parseInt(e),this._bt.clearHeartrateData(),this._bt.setRecordTag(e),this.sendCommand(34,1,e>>>24,e>>>16,e>>>8,e)}getUserInfo(){this.sendCommand(3,0)}setUserInfo(e,t,r,s,i){let a=i/4294967296,c=i/16777216,o=i/65536,n=i/256;this.sendCommand(4,parseInt(e),parseInt(t),parseInt(r),parseInt(s),a,c,o,n,i)}getSportHistory(){this.sendCommand(22,0)}setBloodOxygenMode(e){this.sendCommand(55,parseInt(e))}setHeartRateAlarmEnabled(e){this.sendCommand(87,parseInt(e))}getHeartRateAlarmEnabled(){this.sendCommand(91,0)}setHeartRateSetting(e,t,r){this.sendCommand(70,1,parseInt(e),parseInt(t),parseInt(r))}getHeartRateSetting(){this.sendCommand(70,0)}clearHistoryData(){this.sendCommand(115,0,0,0,0)}};